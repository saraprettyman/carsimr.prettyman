// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// random_shuffle_cpp
Rcpp::NumericVector random_shuffle_cpp(Rcpp::NumericVector a);
RcppExport SEXP _carsimr_prettyman_random_shuffle_cpp(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(random_shuffle_cpp(a));
    return rcpp_result_gen;
END_RCPP
}
// initialize_grid_cpp
NumericMatrix initialize_grid_cpp(double rho, NumericVector dims, double prob_blue);
RcppExport SEXP _carsimr_prettyman_initialize_grid_cpp(SEXP rhoSEXP, SEXP dimsSEXP, SEXP prob_blueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< double >::type prob_blue(prob_blueSEXP);
    rcpp_result_gen = Rcpp::wrap(initialize_grid_cpp(rho, dims, prob_blue));
    return rcpp_result_gen;
END_RCPP
}
// move_red_cpp
NumericMatrix move_red_cpp(NumericMatrix grid);
RcppExport SEXP _carsimr_prettyman_move_red_cpp(SEXP gridSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type grid(gridSEXP);
    rcpp_result_gen = Rcpp::wrap(move_red_cpp(grid));
    return rcpp_result_gen;
END_RCPP
}
// move_blue_cpp
NumericMatrix move_blue_cpp(NumericMatrix grid);
RcppExport SEXP _carsimr_prettyman_move_blue_cpp(SEXP gridSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type grid(gridSEXP);
    rcpp_result_gen = Rcpp::wrap(move_blue_cpp(grid));
    return rcpp_result_gen;
END_RCPP
}
// move_cars_cpp
List move_cars_cpp(NumericMatrix grid, int trials);
RcppExport SEXP _carsimr_prettyman_move_cars_cpp(SEXP gridSEXP, SEXP trialsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type grid(gridSEXP);
    Rcpp::traits::input_parameter< int >::type trials(trialsSEXP);
    rcpp_result_gen = Rcpp::wrap(move_cars_cpp(grid, trials));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_carsimr_prettyman_random_shuffle_cpp", (DL_FUNC) &_carsimr_prettyman_random_shuffle_cpp, 1},
    {"_carsimr_prettyman_initialize_grid_cpp", (DL_FUNC) &_carsimr_prettyman_initialize_grid_cpp, 3},
    {"_carsimr_prettyman_move_red_cpp", (DL_FUNC) &_carsimr_prettyman_move_red_cpp, 1},
    {"_carsimr_prettyman_move_blue_cpp", (DL_FUNC) &_carsimr_prettyman_move_blue_cpp, 1},
    {"_carsimr_prettyman_move_cars_cpp", (DL_FUNC) &_carsimr_prettyman_move_cars_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_carsimr_prettyman(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
